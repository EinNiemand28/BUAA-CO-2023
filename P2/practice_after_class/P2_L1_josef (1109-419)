.data
	flag:	.space	400
	space:	.asciiz	" "
	enter:	.asciiz	"\n"
	
.macro end
	li		$v0, 10
	syscall
.end_macro

.macro readInt(%d)
	li		$v0, 5
	syscall
	move	%d, $v0
.end_macro

.macro printInt(%d)
	li		$v0, 1
	move	$a0, %d
	syscall
.end_macro

.macro printSpace()
	li		$v0, 4
	la		$a0, space
	syscall
.end_macro

.macro printEnter()
	li		$v0, 4
	la		$a0, enter
	syscall
.end_macro

.macro check()
	li		$t7, 0
	for:
		beq		$t7, $s0, end_for
		sll		$t6, $t7, 2
		lw		$t6, flag($t6)
		printInt($t6)
		printSpace()
		addi	$t7, $t7, 1
		j		for
	end_for:
	printEnter()
.end_macro

.text
main:
	readInt($s0)
	readInt($s1)
	li		$t0, 0
	li		$s2, 0
	loop_i_1:
		beq		$t0, $s0, end_loop_i_1
		sub		$t1, $s0, $t0
		addi	$s1, $s1, -1
		div		$s1, $t1
		addi	$s1, $s1, 1
		mfhi	$t1
		addi	$t1, $t1, 1
		li		$s3, 0
		loop:
		move	$t2, $s2
		loop_1:
			beq		$t2, $s0, end_loop_1
			sll		$t3, $t2, 2
			lw		$t4, flag($t3)
			bnez	$t4, else_1
			if_1:
				addi	$s3, $s3, 1
				beq		$s3, $t1, end_loop
			else_1:
			addi	$t2, $t2, 1
			j		loop_1
		end_loop_1:
		li		$t2, 0
		loop_2:
			beq		$t2, $s2, end_loop_2
			sll		$t3, $t2, 2
			lw		$t4, flag($t3)
			bnez	$t4, else_2
			if_2:
				addi	$s3, $s3, 1
				beq		$s3, $t1, end_loop
			else_2:
			addi	$t2, $t2, 1
			j	loop_2
		end_loop_2:
		j		loop
		end_loop:
		sll		$t3, $t2, 2
		li		$t4, 1
		sw		$t4, flag($t3)
		addi	$t2, $t2, 1
		printInt($t2)
		printEnter()
		addi	$t0, $t0, 1
		move	$s2, $t2
		bne		$s2, $s0, else_3
		if_3:
			li		$s2, 0
		else_3:
		j		loop_i_1
	end_loop_i_1:
	end